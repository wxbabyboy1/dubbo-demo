<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd">
    <dubbo:application name="demo-consumer"/>

    <!-- 协议 -->
    <!--
    <dubbo:registry address="multicast://224.5.6.7:1234"/>-->
    <dubbo:registry protocol="zookeeper" address="127.0.0.1:2181,127.0.0.1:2182,127.0.0.1:2183" />
    <dubbo:reference id="demoService" interface="com.alibaba.dubbo.provider.DemoService" version="1.0.0"/>

    <!-- 分组-->
    <dubbo:reference id="groupDemoService1" interface="com.alibaba.dubbo.provider.GroupDemoService" version="1.0.1" group="aaa"/>
    <dubbo:reference id="groupDemoService2" interface="com.alibaba.dubbo.provider.GroupDemoService" version="1.0.1" group="bbb"/>

    <!-- 分组聚合 -->
    <dubbo:reference id="mergeService1" interface="com.alibaba.dubbo.provider.GroupDemoService" version="1.0.1" group="aaa,bbb" merger="true"/>
    <dubbo:reference id="mergeService2" interface="com.alibaba.dubbo.provider.GroupDemoService" version="1.0.1" group="aaa,bbb" merger="my"/>

    <!-- 验证-->
    <dubbo:reference id="validationService" interface="com.alibaba.dubbo.provider.ValidationService" version="1.0.1" validation="true" />

    <!-- 泛化-->
    <dubbo:reference id="genericDemoService" interface="com.alibaba.dubbo.provider.GenericDemoService" version="1.0.1" generic="true" />


    <!-- 上下文
    <dubbo:reference id="contextAAService" interface="com.alibaba.dubbo.provider.ContextAAService" version="1.0.1" />
    <dubbo:reference id="contextBBService" interface="com.alibaba.dubbo.provider.ContextBBService" version="1.0.1" />-->

    <!-- 异步调用 -->
    <dubbo:reference id="asyncDemoAAService" interface="com.alibaba.dubbo.provider.AsyncDemoAAService" version="1.0.1" >
        <dubbo:method name="findAA" async="true" />
    </dubbo:reference>
    <dubbo:reference id="asyncDemoBBService" interface="com.alibaba.dubbo.provider.AsyncDemoBBService" version="1.0.1" >
        <dubbo:method name="findBB" async="true" />
    </dubbo:reference>

    <!-- 参数回调 -->
    <dubbo:reference id="callbackService" interface="com.callback.CallbackService" />

    <!-- 事件通知 -->
    <bean id ="demoCallback" class = "com.event.NotifyImpl" />
    <dubbo:reference id="eventService" interface="com.event.EventService" version="1.0.0" >
        <dubbo:method name="get" async="true" onreturn = "demoCallback.onreturn" onthrow="demoCallback.onthrow" />
    </dubbo:reference>

    <!-- 本地存根 -->
    <dubbo:reference id="stubDemoService" interface="com.stub.StubDemoService" />

    <!-- 本地伪装 -->
    <dubbo:reference id="mockDemoService" interface="com.mock.MockDemoService" />

    <!-- 服务降级-->
    <dubbo:reference id="descMockService" interface="com.mock.DescMockService" />

    <!-- 关闭所有服务的启动时检查 (没有提供者时报错)： -->
    <dubbo:consumer check="false" />
</beans>