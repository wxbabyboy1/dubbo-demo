<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd">
    <dubbo:application name="demo-consumer"/>

    <!-- 协议 -->
    <!--
    <dubbo:registry address="multicast://224.5.6.7:1234"/>-->
    <dubbo:registry protocol="zookeeper" address="192.168.137.128:2181" />
    <dubbo:reference id="providerXmlService" interface="com.service.ProviderXmlService" version="1.0.0"/>
    <dubbo:reference id="p2XmlService" interface="com.service.P2XmlService" version="1.0.1"/>
    <!-- 过滤器 -->
    <dubbo:reference id="filterService" interface="com.service.FilterService" version="1.0.0"/>

    <!-- 本地伪装 -->
    <dubbo:reference id="mockDemoService" interface="com.service.MockDemoService" />

    <!-- 事件通知 -->
    <bean id ="notifyBack" class = "com.service.NotifyImpl" />
    <dubbo:reference id="eventService" interface="com.service.EventService" version="1.0.0" >
        <dubbo:method name="get" async="true" onreturn = "notifyBack.onreturn" onthrow="notifyBack.onthrow" />
    </dubbo:reference>

    <!-- 上下文 -->
   <dubbo:reference id="contextAAService" interface="com.service.ContextAAService" version="1.0.1" />
   <dubbo:reference id="contextBBService" interface="com.service.ContextBBService" version="1.0.2" />

    <!-- 泛化引用 -->
    <dubbo:reference id="genericDemoService" interface="com.service.GenericDemoService" version="1.0.1" generic="true" />

    <!-- 泛化实现 -->
    <dubbo:reference id="genericImplService" interface="com.service.BarService" version="1.0.1"/>

    <!-- 关闭所有服务的启动时检查 (启动时检查提供者是否存在，true报错，false忽略)： -->
    <dubbo:consumer check="false" />
</beans>