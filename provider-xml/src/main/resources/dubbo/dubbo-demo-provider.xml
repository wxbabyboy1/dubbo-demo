<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd">
    <dubbo:application name="demo-provider"/>
    <!--
    <dubbo:registry address="multicast://224.5.6.7:1234"/>-->
    <dubbo:registry protocol="zookeeper" address="192.168.111.129:2181,192.168.111.129:2182,192.168.111.129:2183" />
    <dubbo:protocol name="dubbo" port="20880"/>

    <!-- 分组 不同版本号 start -->
    <bean id="paroviderXmlService" class="com.service.ProviderXmlServiceImpl"/>
    <dubbo:service interface="com.service.ProviderXmlService" ref="paroviderXmlService" version="1.0.0" />

    <bean id="p2XmlService" class="com.service.P2XmlServiceImpl"/>
    <dubbo:service interface="com.service.P2XmlService" ref="p2XmlService" version="1.0.1" />
    <!-- 分组 不同版本号 end-->

    <!-- filter -->
    <bean id="filterService" class="com.filter.FilterServiceImpl"/>
    <dubbo:service interface="com.service.FilterService" ref="filterService" version="1.0.0" filter="countFilter,accessTimeOutFilter"/>

    <!-- mock -->
    <!-- 本地伪装-->
    <bean id="mockDemoService" class="com.mock.MockDemoServiceImpl"/>
    <dubbo:service interface="com.service.MockDemoService" ref="mockDemoService" mock="com.service.MockDemo2ServiceMock" />

    <!-- 事件通知 -->
    <bean id="eventService" class="com.notify.EventServiceImpl"/>
    <dubbo:service interface="com.service.EventService" ref="eventService" version="1.0.0"/>

    <!-- 上下文 -->
    <bean id="contextAAService" class="com.context.ContextAAServiceImpl"/>
    <dubbo:service interface="com.service.ContextAAService" ref="contextAAService" version="1.0.1" />
    <bean id="contextBBService" class="com.context.ContextBBServiceImpl"/>
    <dubbo:service interface="com.service.ContextBBService" ref="contextBBService" version="1.0.2" />

    <!-- 泛化引用 只在消费端定义-->
    <bean id="genericDemoService" class="com.generic.GenericDemoServiceImpl"/>
    <dubbo:service interface="com.service.GenericDemoService" ref="genericDemoService" version="1.0.1" />

    <!-- 泛化实现 -->
    <bean id="genericImplService" class="com.genericImpl.MyGenericService" />
    <dubbo:service interface="com.service.BarService" ref="genericImplService" version="1.0.1" />

    <!-- 分组聚合 -->
    <bean id="mergeService1" class="com.group.GroupDemoService1Impl"/>
    <dubbo:service interface="com.service.GroupDemoService" ref="mergeService1" version="1.0.1" group="aaa"/>
    <bean id="mergeService2" class="com.group.GroupDemoService2Impl"/>
    <dubbo:service interface="com.service.GroupDemoService" ref="mergeService2"  version="1.0.1" group="bbb"/>

    <!-- 分组 -->
    <dubbo:service interface="com.service.GroupDemoService" ref="groupDemoService1" version="1.0.1" group="aaa"/>
    <bean id="groupDemoService1" class="com.group.GroupDemoService1Impl"/>
    <dubbo:service interface="com.service.GroupDemoService" ref="groupDemoService2"  version="1.0.1" group="bbb"/>
    <bean id="groupDemoService2" class="com.group.GroupDemoService2Impl"/>

    <!-- 参数回调 -->
    <bean id="callbackService" class="com.callback.CallbackServiceImpl" />
    <dubbo:service interface="com.service.CallbackService" ref="callbackService" connections="1" callbacks="1000">
        <dubbo:method name="addListener">
            <dubbo:argument index="1" callback="true" />
            <!--也可以通过指定类型的方式-->
            <!--<dubbo:argument type="com.demo.CallbackListener" callback="true" />-->
        </dubbo:method>
    </dubbo:service>

    <!--  本地存根 调用provider -->
    <bean id="stubDemoService" class="com.stub.StubServiceImpl"/>
    <dubbo:service interface="com.service.StubDemoService" ref="stubDemoService" stub="true"/>

    <!-- 验证 暴露服务-->
    <bean id="validationService" class="com.validation.ValidationServiceImpl"/>
    <dubbo:service interface="com.service.ValidationService" ref="validationService" version="1.0.1" />

    <!-- 设置超时，可查看优先级：文档 5.1XML配置-->
    <dubbo:provider timeout="10000" retries="1"/>
</beans>