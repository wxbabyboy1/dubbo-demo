<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd">
    <dubbo:application name="demo-provider"/>
    <!--
    <dubbo:registry address="multicast://224.5.6.7:1234"/>-->
    <dubbo:registry protocol="zookeeper" address="192.168.111.129:2181,192.168.111.129:2182,192.168.111.129:2183" />
    <dubbo:protocol name="dubbo" port="20880"/>

    <dubbo:service interface="com.service.ProviderXmlService" ref="paroviderXmlService" version="1.0.0" />
    <bean id="paroviderXmlService" class="com.service.ProviderXmlServiceImpl"/>

    <dubbo:service interface="com.service.P2XmlService" ref="p2XmlService" version="1.0.1" />
    <bean id="p2XmlService" class="com.service.P2XmlServiceImpl"/>

    <!-- filter -->
    <bean id="filterService" class="com.filter.FilterServiceImpl"/>
    <dubbo:service interface="com.service.FilterService" ref="filterService" version="1.0.0" filter="countFilter,accessTimeOutFilter"/>

    <!-- mock -->
    <!-- 本地伪装-->
    <bean id="mockDemoService" class="com.mock.MockDemoServiceImpl"/>
    <dubbo:service interface="com.service.MockDemoService" ref="mockDemoService" mock="com.service.MockDemo2ServiceMock" />

    <!-- 事件通知 -->
    <bean id="eventService" class="com.notify.EventServiceImpl"/>
    <dubbo:service interface="com.service.EventService" ref="eventService" version="1.0.0"/>

    <!-- 设置超时，可查看优先级：文档 5.1XML配置-->
    <dubbo:provider timeout="10000" retries="1"/>
</beans>